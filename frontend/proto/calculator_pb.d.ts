// @generated by protoc-gen-es v1.10.1
// @generated from file calculator.proto (package calculator, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message calculator.CalculateRequest
 */
export declare class CalculateRequest extends Message<CalculateRequest> {
  /**
   * @generated from field: double num1 = 1;
   */
  num1: number;

  /**
   * @generated from field: double num2 = 2;
   */
  num2: number;

  /**
   * @generated from field: string operator = 3;
   */
  operator: string;

  constructor(data?: PartialMessage<CalculateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "calculator.CalculateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CalculateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CalculateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CalculateRequest;

  static equals(a: CalculateRequest | PlainMessage<CalculateRequest> | undefined, b: CalculateRequest | PlainMessage<CalculateRequest> | undefined): boolean;
}

/**
 * @generated from message calculator.CalculateResponse
 */
export declare class CalculateResponse extends Message<CalculateResponse> {
  /**
   * @generated from field: double result = 1;
   */
  result: number;

  constructor(data?: PartialMessage<CalculateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "calculator.CalculateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CalculateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CalculateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CalculateResponse;

  static equals(a: CalculateResponse | PlainMessage<CalculateResponse> | undefined, b: CalculateResponse | PlainMessage<CalculateResponse> | undefined): boolean;
}

